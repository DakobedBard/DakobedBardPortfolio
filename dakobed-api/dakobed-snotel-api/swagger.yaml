swagger: "2.0"
info:
  description: "Dakobed Serverless API"
  version: "1.0.0"
  title: "Dakobed Snotel API"
host: "petstore.com"
basePath: "/v1"
schemes:
- "https"
paths:

  /snotel:
    get:
      tags:
        - "snotel"
      summary: "return snotel data by location ID"
      description: "Returns snotel data for a single location over range of dates specified by query params"
      operationId: "getSnotelByLocation"
      produces:
        - "application/json"
      parameters:
        - name: "location"
          in: "query"
          description: "ID of location"
          required: true
          type: "integer"
          format: "int64"
        - name: "sdate"
          in: "query"
          description: "starting date"
          required: true
          type: "integer"
          format: "int64"
        - name: "edate"
          in: "query"
          description: "ending date"
          required: true
          type: "integer"
          format: "int64"

      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Empty"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"
      # For AWS Integration
      x-amazon-apigateway-request-validators:
        basic:
          validateRequestParameters: true
      x-amazon-apigateway-integration:
        type: "aws"
        httpMethod: "POST"
        # Replace AWS_REGION and ACCOUNT_ID in uri
        uri: "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:710339184759:function:SnotelQueryFunction/invocations"
        responses:
          default:
            statusCode: 200
        requestTemplates:
          application/json: "{\r\n  \"method\": \"$context.httpMethod\",\r\n  \"body\" : \"$input.body\",\r\n  \"headers\": {\r\n    #foreach($param in $input.params().header.keySet())\r\n    \"$param\": \"$util.escapeJavaScript($input.params().header.get($param))\" #if($foreach.hasNext),#end\r\n\r\n    #end\r\n  },\r\n  \"queryParams\": {\r\n    #foreach($param in $input.params().querystring.keySet())\r\n    \"$param\": \"$util.escapeJavaScript($input.params().querystring.get($param))\" #if($foreach.hasNext),#end\r\n\r\n    #end\r\n  },\r\n  \"pathParams\": {\r\n    #foreach($param in $input.params().path.keySet())\r\n    \"$param\": \"$util.escapeJavaScript($input.params().path.get($param))\" #if($foreach.hasNext),#end\r\n\r\n    #end\r\n  }  \r\n}"
